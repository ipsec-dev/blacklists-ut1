name: Sync Blacklist

on:
  schedule:
    - cron: '0 0 1,15 * *' # Every 2 weeks (1st and 15th of each month)
  workflow_dispatch:

jobs:
  upload-blacklists:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install required tools
      run: sudo apt-get update && sudo apt-get install -y wget tar

    - name: Download blacklist archive
      run: wget -O blacklists.tar.gz https://dsi.ut-capitole.fr/blacklists/download/blacklists.tar.gz

    - name: Extract archive
      run: |
        mkdir -p blacklists
        tar -xzf blacklists.tar.gz -C blacklists --strip-components=1
    - name: Flatten and rename domains files with www variants
      run: |
        mkdir -p upload
        for dir in blacklists/*; do
          if [ -d "$dir" ] && [ -f "$dir/domains" ]; then
            base=$(basename "$dir")
            # Copy original domains file
            cp "$dir/domains" "upload/$base"
            # Create hosts format with 0.0.0.0 prefix
            awk '{
              print "0.0.0.0 "$0
              if ($0 !~ /^www\./) {
                print "0.0.0.0 www."$0
              }
            }' "$dir/domains" > "upload/0-$base"
            # Create hosts format with 172.16.10.10 prefix
            awk '{
              print "172.16.10.10 "$0
              if ($0 !~ /^www\./) {
                print "172.16.10.10 www."$0
              }
            }' "$dir/domains" > "upload/172-$base"
          fi
        done
    - name: Write update timestamp
      run: |
        echo "Last updated: $(date -u '+%Y-%m-%d %H:%M:%SZ')" > last_updated.txt
    - name: Commit and push update timestamp
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add last_updated.txt
        if ! git diff --cached --quiet; then
          git commit -m "âœ… Last updated: $(date +'%Y-%m-%d')"
          git push origin HEAD
        else
          echo "No changes to commit"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate release tag
      id: tag
      run: echo "TAG=blacklists-latest" >> $GITHUB_ENV && echo "blacklists-latest" > tag.txt

    - name: Create GitHub Release and Upload Blacklist Files
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.TAG }}
        name: "Blacklist Update ${{ env.TAG }}"
        files: upload/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
